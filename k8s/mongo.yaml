apiVersion: v1
kind: Secret
metadata:
  name: mongo-creds
  namespace: clinic-system
type: Opaque
data:
  username: cm9vdA==  # This is 'root' encoded in base64
  password: c2VjcmV0  # This is 'secret' encoded in base64

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-initdb-script
  namespace: clinic-system
data:
  init-db.js: |
    db.createUser({
      user: "root",
      pwd: "secret",
      roles: [
        { role: "userAdminAnyDatabase", db: "admin" },
        { role: "readWriteAnyDatabase", db: "admin" }
      ]
    });
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: clinic-system
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo
          args: [ "--auth" ]
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-creds
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-creds
                  key: password
          volumeMounts:
            - name: mongo-data-dir
              mountPath: /data/db
            - name: mongo-initdb-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mongo-data-dir
          persistentVolumeClaim:
            claimName: mongo-data
        - name: mongo-initdb-script
          configMap:
            name: mongo-initdb-script
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: clinic-system
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongo